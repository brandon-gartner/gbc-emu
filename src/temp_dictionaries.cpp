#include <map>

std::map<uint_8, std::string> new_publisher_code = {
    {0x00, 'None'},
    {0x01, 'Nintendo R&D1'},
    {0x08, 'Capcom'},
    {0x13, 'Electronic Arts'},
    {0x18, 'Hudson Soft'},
    {0x19, 'b-ai'},
    {0x20, 'kss'},
    {0x22, 'pow'},
    {0x24, 'PCM Complete'},
    {0x25, 'san-x'},
    {0x28, 'Kemco Japan'},
    {0x29, 'seta'},
    {0x30, 'Viacom'},
    {0x31, 'Nintendo'},
    {0x32, 'Bandai'},
    {0x33, 'Ocean/Acclaim'},
    {0x34, 'Konami'},
    {0x35, 'Hector'},
    {0x37, 'Taito'},
    {0x38, 'Hudson'},
    {0x39, 'Banpresto'},
    {0x41, 'Ubi Soft'},
    {0x42, 'Atlus'},
    {0x44, 'Malibu'},
    {0x46, 'angel'},
    {0x47, 'Bullet-Proof'},
    {0x49, 'irem'},
    {0x50, 'Absolute'},
    {0x51, 'Acclaim'},
    {0x52, 'Activision'},
    {0x53, 'American sammy'},
    {0x54, 'Konami'}, //??? there are two?
    {0x55, 'Hi tech entertainment'},
    {0x56, 'LJN'},
    {0x57, 'Matchbox'},
    {0x58, 'Mattel'},
    {0x59, 'Milton Bradley'},
    {0x60, 'Titus'},
    {0x61, 'Virgin'},
    {0x64, 'LucasArts'},
    {0x67, 'Ocean'},
    {0x69, 'Electronic Arts'}, //??? EA too
    {0x70, 'Infogrames'},
    {0x71, 'Interplay'},
    {0x72, 'Broderbund'},
    {0x73, 'sculptured'},
    {0x75, 'sci'},
    {0x78, 'THQ'},
    {0x79, 'Accolade'},
    {0x80, 'misawa'},
    {0x83, 'lozc'},
    {0x86, 'Tokuma Shoten Intermedia'},
    {0x87, 'Tsukuda Original'},
    {0x91, 'Chunsoft'},
    {0x92, 'Video system'},
    {0x93, 'Ocean/Acclaim'}, // also duplicated
    {0x95, 'Varie'},
    {0x96, 'Yonezawa/s\'pal'},
    {0x97, 'Kaneko'},
    {0x99, 'Pack in soft'},
    {0x9H, 'Bottom Up'},
    {0xA4, 'Konami (Yu-Gi-Oh!)'},
};

std::map<uint8_t, std::string> cartridge_type = {
    {0x00, "ROM ONLY"},
    {0x01, "MBC1"},
    {0x02, "MBC1+RAM"},
    {0x03, "MBC1+RAM+BATTERY"},
    {0x05, "MBC2"},
    {0x06, "MBC2+BATTERY"},
    {0x08, "ROM+RAM"},
    {0x09, "ROM+RAM+BATTERY"},
    {0x0B, "MMM01"},
    {0x0C, "MMM01+RAM"},
    {0x0D, "MMM01+RAM+BATTERY"},
    {0x0F, "MBC3+TIMER+BATTERY"},
    {0x10, "MBC3+TIMER+RAM+BATTERY"},
    {0x11, "MBC3"},
    {0x12, "MBC3+RAM"},
    {0x13, "MBC3+RAM+BATTERY"},
    {0x19, "MBC5"},
    {0x1A, "MBC5+RAM"},
    {0x1B, "MBC5+RAM+BATTERY"},
    {0x1C, "MBC5+RUMBLE"},
    {0x1D, "MBC5+RUMBLE+RAM"},
    {0x1E, "MBC5+RUMBLE+RAM+BATTERY"},
    {0x20, "MBC6"},
    {0x22, "MBC7+SENSOR+RUMBLE+RAM+BATTERY"},
    {0xFC, "POCKET CAMERA"},
    {0xFD, "BANDAI TAMA5"},
    {0xFE, "HuC3"},
    {0xFF, "HuC1+RAM+BATTERY"},
}

// leaving out the unused rom sizes
// each rom bank corresponds to 16384 b (at least in terms of math)
// ill be using this for conversions
// and to not need a second map
std::map<uint8_t, int> rom_banks = {
    {0x00, 2},
    {0x01, 4},
    {0x02, 8},
    {0x03, 16},
    {0x04, 32},
    {0x05, 64},
    {0x06, 128},
    {0x07, 256},
    {0x08, 512},
}

// A lot of duplicates exist in here, not sure on why
std::map<uint8_t, std::string> old_publisher_code = {
    {0x00, ""},
    {0x01, ""},
    {0x08, ""},
    {0x09, ""},
    {0x0A, ""},
    {0x0B, ""},
    {0x0C, ""},
    {0x13, ""},
    {0x18, ""},
    {0x19, ""},
    {0x1A, ""},
    {0x1D, ""},
    {0x1F, ""},
    {0x24, ""},
    {0x25, ""},
    {0x28, ""},
    {0x29, ""},
    {0x30, ""},
    {0x31, ""},
    {0x32, ""},
    {0x33, ""},
    {0x34, ""},
    {0x35, ""},
    {0x38, ""},
    {0x39, ""},
    {0x3C, ""},
    {0x3E, ""},
    {0x41, ""},
    {0x42, ""},
    {0x44, ""},
    {0x46, ""},
    {0x47, ""},
    {0x49, ""},
    {0x4A, ""},
    {0x4D, ""},
    {0x4F, ""},
    {0x50, ""},
    {0x51, ""},
    {0x52, ""},
    {0x53, ""},
    {0x54, ""},
    {0x55, ""},
    {0x56, ""},
    {0x57, ""},
    {0x59, ""},
    {0x5A, ""},
    {0x5B, ""},
    {0x5C, ""},
    {0x5D, ""},
    {0x60, ""},
    {0x61, ""},
    {0x67, ""},
    {0x69, ""},
    {0x6E, ""},
    {0x6F, ""},
    {0x70, ""},
    {0x71, ""},
    {0x72, ""},
    {0x73, ""},
    {0x75, ""},
    {0x78, ""},
    {0x79, ""},
    {0x7A, ""},
    {0x7C, ""},
    {0x7F, ""},
    {0x80, ""},
    {0x83, ""},
    {0x86, ""},
    {0x8B, ""},
    {0x8C, ""},
    {0x8E, ""},
    {0x8F, ""},
    {0x91, ""},
    {0x92, ""},
    {0x93, ""},
    {0x95, ""},
    {0x96, ""},
    {0x97, ""},
    {0x99, ""},
    {0x9A, ""},
    {0x9B, ""},
    {0x9C, ""},
    {0x9D, ""},
    {0x9F, ""},
    {0xA1, ""},
    {0xA2, ""},
    {0xA4, ""},
    {0xA6, ""},
    {0xA7, ""},
    {0xA9, ""},
    {0xAA, ""},
    {0xAC, ""},
    {0xAD, ""},
    {0xAF, ""},
    {0xB0, ""},
    {0xB1, ""},
    {0xB2, ""},
    {0xB4, ""},
    {0xB6, ""},
    {0xB7, ""},
    {0xB9, ""},
    {0xBA, ""},
    {0xBB, ""},
    {0xBD, ""},
    {0xBF, ""},
    {0xC0, ""},
    {0xC2, ""},
    {0xC3, ""},
    {0xC4, ""},
    {0xC5, ""},
    {0xC6, ""},
    {0xC8, ""},
    {0xC9, ""},
    {0xCA, ""},
    {0xCB, ""},
    {0xCC, ""},
    {0xCD, ""},
    {0xCE, ""},
    {0xCF, ""},
    {0xD0, ""},
    {0xD1, ""},
    {0xD2, ""},
    {0xD3, ""},
    {0xD4, ""},
    {0xD6, ""},
    {0xD7, ""},
    {0xD9, ""},
    {0xDA, ""},
    {0xDB, ""},
    {0xDD, ""},
    {0xDE, ""},
    {0xDF, ""},
    {0xE0, ""},
    {0xE1, ""},
    {0xE2, ""},
    {0xE3, ""},
    {0xE5, ""},
    {0xE7, ""},
    {0xE8, ""},
    {0xE9, ""},
    {0xEA, ""},
    {0xEB, ""},
    {0xEC, ""},
    {0xEE, ""},
    {0xF0, ""},
    {0xF3, ""},
    {0xFF, ""},
}